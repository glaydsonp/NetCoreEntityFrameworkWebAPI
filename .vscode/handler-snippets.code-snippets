{
	"Query Handler boilerplate": {
		"prefix": "queryhandler",
		"body": [
			"public class Query : IRequest<${1:example}> { }",
			"",
			"        public class Handler : IRequestHandler<Query, ${1:example}>",
			"        {",
			"            private readonly DataContext _context;",
			"            public Handler(DataContext context)",
			"            {",
			"                this._context = context;",
			"",
			"            }",
			"",
			"            public async Task<${1:example}> Handle(Query request, CancellationToken cancellationToken)",
			"            {",
			"                // to-do handler logic",
			"            }",
			"        }"
		],
		"description": "Handler boilerplate"
	},
	"Command Handler boilerplate": {
		"prefix": "commandhandler",
		"body": [
			"        public class Command : IRequest",
			"        {",
			"            // to-do fill it with object props",
			"        }",
			"",
			"        public class Handler : IRequestHandler<Command>",
			"        {",
			"            private readonly DataContext _context;",
			"            public Handler(DataContext context)",
			"            {",
			"                this._context = context;",
			"            }",
			"",
			"            public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
			"            {",
			"                var obj= new ${1:example}",
			"                {",
			"                    // to-do fill it with object props",
			"                };",
			"",
			"                _context.${1:example}.Add(obj);",
			"",
			"                var result = await _context.SaveChangesAsync() > 0;",
			"",
			"                if (result) return Unit.Value;",
			"",
			"                throw new Exception(\"Problem saving changes.\");",
			"",
			"            }",
			"            }"
		],
		"description": "Handler boilerplate"
	}
}